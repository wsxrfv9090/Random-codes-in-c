//定义哈夫曼树结点结构体，该结构体应该包括，左节点指针，右节点指针，数据（频率及
//英文字符）
//
//定义一个排序函数，该函数能在队列元素被添加（队列长度增长的时候）对队列元素进行
//通过队队列遍历进行排序。
//按照数据的重新排序。
//
//定义一个队列，该队列用链式存储，用来存储离散的哈夫曼树结点结构体。该队列应该能
//够将概率大小的顺序反应出来，能在每个数据里包含字符信息，后续每添加一次结点就会
//排一次序，确保每次从队列中取出的都是最小的，注意初始所有左右节点指针都指向NULL
// 
//增加链式结点的函数
//
//定义插入函数，可以在定义的队列中插入新的元素
//
//构建哈夫曼树，从队列中取出最小的两个，从优先队列中取出两个最小元素，创建一个新
//节点作为它们的父节点，然后将新节点添加回队列。重复此过程直到队列中只剩一个节点
//，这个结点就是哈夫曼树的根节点。
//
//建立一个新的结构体，其中至少要包括一个英文字符，一个float型的百分比数据，一个
//二进制的串（哈夫曼编码）
//
//建立一个静态数组来存储这些结构。
//
//建立一个函数来遍历哈夫曼树来生成二进制串并将这些数据存储到新定义的静态数组里。